/*
 * SQLScriptHeaderBuilder.java
 *
 * 13.06.2013
 *
 * (c) by ollie
 *
 */

package archimedes.legacy.scheme;

import java.util.LinkedList;
import java.util.List;

import archimedes.legacy.script.sql.SQLScript;
import archimedes.model.DataModel;
import archimedes.model.UserInformation;
import corent.db.DBExecMode;
import corentx.dates.PTimestamp;

/**
 * A builder for SQL scripts which are generated by Archimedes.
 * 
 * @author ollie
 * 
 * @changed OLI 13.06.2013 - Added.
 */

public class SQLScriptHeaderBuilder {

	/**
	 * Appends a SQL script header to the passed script.
	 * 
	 * @param dataModel
	 *            The data model which the header is to create for.
	 * @param script
	 *            The script which the header is to append to.
	 * @param userInfos
	 *            The user information which are to show in the header.
	 * @param dbmode
	 *            The mode of the DBMS which the script is created for.
	 * 
	 * @changed OLI 13.06.2013 - Added.
	 */
	public void append(DataModel dataModel, SQLScript script, UserInformation userInfos, DBExecMode dbmode) {
		for (String s : this.create(dataModel, userInfos, dbmode)) {
			script.addExtendingStatement(s);
		}
	}

	/**
	 * Returns a SQL script header to the passed script.
	 * 
	 * @param dataModel
	 *            The data model which the header is to create for.
	 * @param userInfos
	 *            The user information which are to show in the header.
	 * @param dbmode
	 *            The mode of the DBMS which the script is created for.
	 * 
	 * @changed OLI 13.12.2013 - Added.
	 */
	public String[] create(DataModel dataModel, UserInformation userInfos, DBExecMode dbmode) {
		List<String> script = new LinkedList<String>();
		script.add("/*********************************************************************");
		script.add(" *");
		script.add(" * Archimedes update script");
		script.add(" *");
		script.add(" * Schema:      " + dataModel.getName());
		script.add(" * Version:     " + dataModel.getVersion());
		script.add(" * Created at:  " + new PTimestamp());
		script.add(" * Created by:  " + userInfos.getUserName() + " (" + userInfos.getUserToken() + ")");
		script.add(" * Created for: " + userInfos.getVendorName());
		script.add(" *");
		script.add(" * DBMS:        " + dbmode.toToken());
		script.add(" *");
		script.add(" *");
		script.add(" * THIS SCRIPT IS GENERATED!!!");
		script.add(" *");
		script.add(" * Do not change manually!");
		script.add(" *");
		script.add(" *");
		script.add(" ********************************************************************/");
		script.add("");
		script.add("");
		return script.toArray(new String[0]);
	}

	/**
	 * Returns a SQL script header to the passed script.
	 * 
	 * @param dataModel
	 *            The data model which the header is to create for.
	 * @param userInfos
	 *            The user information which are to show in the header.
	 * @param dbmode
	 *            The mode of the DBMS which the script is created for.
	 * 
	 * @changed OLI 13.12.2013 - Added.
	 */
	public String createAsString(DataModel dataModel, UserInformation userInfos, DBExecMode dbmode) {
		String script = new String();
		for (String s : this.create(dataModel, userInfos, dbmode)) {
			script += s + "\n";
		}
		return script;
	}

}