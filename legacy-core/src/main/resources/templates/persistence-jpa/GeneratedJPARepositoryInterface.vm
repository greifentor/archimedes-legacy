package ${PackageName};

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import ${DBOPackageName}.${DBOClassName};
#foreach($FindBy in $FindBys)
#if(${FindBy.isEnumType()})
import ${FindBy.getTypePackageName()}.${FindBy.getTypeName()};
#end
#end
#foreach($ListAccessData in $ListAccess)
#if($ListAccessData.getTypeQualifiedName())
import ${ListAccessData.getTypeQualifiedName()};
#end
#end
import lombok.Generated;
#if (($FindBys && $HasNoUniques) || ${ListAccess} || ${Subclass})
import java.util.List;
#end
#if ($FindBys && $HasUniques)
import java.util.Optional;
#end
#foreach ($ImportDeclaration in $ImportDeclarations.toList())
import ${ImportDeclaration.getSingleImportDeclaration()};
#end

#if (${HasObjectReferences})
#foreach ($FindBy in $FindBys)
import ${FindBy.getTypePackageName()}.${FindBy.getTypeName()};
#end

#end
/**
 * A generated JPA repository for ${PluralName}.
 *
 * GENERATED CODE !!! DO NOT CHANGE !!!
 */
@Generated
@Repository
public interface ${ClassName} extends JpaRepository<${DBOClassName}, ${IdClassName}> {
#if($Subclass)

	@Override
	List<${DBOClassName}> findAll();

#end
#foreach($FindBy in $FindBys)

	#if (${FindBy.isUnique()})	Optional#{else}	List#{end}<${DBOClassName}> find#if (!${FindBy.isUnique()})All#{end}By${FindBy.getColumnName()}(${FindBy.getTypeName()} ${FindBy.getAttributeName()});
#if ( !$foreach.hasNext )

#end
#end
#foreach($ListAccessData in $ListAccess)

	List<${DBOClassName}> findAllBy${ListAccessData.getFieldNameCamelCase()}(${ListAccessData.getTypeName()} ${ListAccessData.getFieldName()});
#if ( !$foreach.hasNext )

#end
#end
}