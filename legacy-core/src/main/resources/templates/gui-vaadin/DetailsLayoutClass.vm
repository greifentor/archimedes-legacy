package ${PackageName};

#if (${GUIColumnDataCollection.hasFieldType("UPLOAD")} == true)
import java.io.IOException;
import java.io.InputStream;

#end
import com.vaadin.flow.component.AttachEvent;
#if (${GUIColumnDataCollection.hasFieldType("BOOLEAN")} == true)
import com.vaadin.flow.component.checkbox.Checkbox;
#end
#if (${HasSelectionElement} == true)
import com.vaadin.flow.component.combobox.ComboBox;
#end
#if (${GUIColumnDataCollection.hasFieldType("TIMESTAMP")} == true)
import com.vaadin.flow.component.datetimepicker.DateTimePicker;
#end
#if (${GUIColumnDataCollection.hasFieldType("INTEGER")} == true)
import com.vaadin.flow.component.textfield.IntegerField;
#end
#if (${GUIColumnDataCollection.hasFieldType("NUMERIC")} == true)
import com.vaadin.flow.component.textfield.NumberField;
#end
#if (${GUIColumnDataCollection.hasFieldType("TEXT")} == true)
import com.vaadin.flow.component.textfield.TextArea;
#end
#if (${GUIColumnDataCollection.hasFieldType("STRING")} == true)
import com.vaadin.flow.component.textfield.TextField;
#end
#if (${GUIColumnDataCollection.hasFieldType("UPLOAD")} == true)
import com.vaadin.flow.component.upload.Upload;
import com.vaadin.flow.component.upload.receivers.MultiFileMemoryBuffer;
#end

#foreach ($ImportDeclaration in $ImportDeclarations.toList())
import ${ImportDeclaration.getSingleImportDeclaration()};
#end
import ${ItemLabelGeneratorCollectionPackageName}.${ItemLabelGeneratorCollectionClassName};
import lombok.Generated;
import lombok.RequiredArgsConstructor;

#if (${Generated})
/**
 * ${Generated}
 */
#end
@Generated
@RequiredArgsConstructor
public class ${ClassName} extends ${AbstractMasterDataBaseLayoutClassName} {

#foreach (${Preference} in ${PreferenceData})
	#if (${Preference.getType()} == "BOOLEAN")
	private static final String CHECK_BOX_${Preference.getPreferenceIdName()} = "${ClassName}.field${Preference.getAttributeNameCamelCase()}.preference";
	#elseif (${Preference.getType()} == "COMBOBOX")
	private static final String COMBO_BOX_${Preference.getPreferenceIdName()} = "${ClassName}.field${Preference.getAttributeNameCamelCase()}.preference";
	#elseif (${Preference.getType()} == "ENUM")
	private static final String COMBO_BOX_${Preference.getPreferenceIdName()} = "${ClassName}.field${Preference.getAttributeNameCamelCase()}.preference";
	#elseif (${Preference.getType()} == "INTEGER")
	private static final String INTEGER_FIELD_${Preference.getPreferenceIdName()} = "${ClassName}.field${Preference.getAttributeNameCamelCase()}.preference";
	#elseif (${Preference.getType()} == "NUMERIC")
	private static final String NUMBER_FIELD_${Preference.getPreferenceIdName()} = "${ClassName}.field${Preference.getAttributeNameCamelCase()}.preference";
	#elseif (${Preference.getType()} == "TEXT")
	private static final String TEXT_FIELD_${Preference.getPreferenceIdName()} = "${ClassName}.field${Preference.getAttributeNameCamelCase()}.preference";
	#elseif (${Preference.getType()} == "TIMESTAMP")
	private static final String TIMESTAMP_FIELD_${Preference.getPreferenceIdName()} = "${ClassName}.field${Preference.getAttributeNameCamelCase()}.preference";
	#elseif (${Preference.getType()} == "UPLOAD")
	private static final String UPLOAD_${Preference.getPreferenceIdName()} = "${ClassName}.field${Preference.getAttributeNameCamelCase()}.preference";
	#else
	private static final String TEXT_FIELD_${Preference.getPreferenceIdName()} = "${ClassName}.field${Preference.getAttributeNameCamelCase()}.preference";
	#end

#end
	private final ${ButtonFactoryClassName} buttonFactory;
	private final ${ModelClassName} model;
	private final ${ServiceInterfaceName} service;
#foreach ($FieldDeclaration in $FieldDeclarations.toList())
	private final ${FieldDeclaration.getTypeName()} ${FieldDeclaration.getAttributeName()};
#end
	private final ${ResourceManagerInterfaceName} resourceManager;
	private final ${SessionDataClassName} session;
	private final Observer observer;
	private final DetailsLayoutComboBoxItemLabelGenerator<#if(${ModelSuperClassName})${ModelSuperClassName}#else${ModelClassName}#end> comboBoxItemLabelGenerator;
	private final ${ItemLabelGeneratorCollectionClassName} itemLabelGeneratorCollection;

#foreach ($Reference in $GUIReferences)
	private ComboBox<${Reference.getReferencedModelClassName()}> comboBox${Reference.getFieldNameCamelCase()};
#end
#foreach ($Column in ${GUIColumnDataCollection.getColumns()})
	#if (${Column.getType()} == "BOOLEAN")
	private Checkbox checkbox${Column.getFieldNameCamelCase()};
	#elseif (${Column.getType()} == "COMBOBOX")
	#elseif (${Column.getType()} == "ENUM")
	private ComboBox<${Column.getFieldTypeName()}> comboBox${Column.getFieldNameCamelCase()};
	#elseif (${Column.getType()} == "INTEGER")
	private IntegerField integerField${Column.getFieldNameCamelCase()};
	#elseif (${Column.getType()} == "NUMERIC")
	private NumberField numberField${Column.getFieldNameCamelCase()};
	#elseif (${Column.getType()} == "TEXT")
	private TextArea textArea${Column.getFieldNameCamelCase()};
	#elseif (${Column.getType()} == "TIMESTAMP")
	private DateTimePicker dateTimePicker${Column.getFieldNameCamelCase()};
	#elseif (${Column.getType()} == "UPLOAD")
	private Upload upload${Column.getFieldNameCamelCase()};
	#else
	private TextField textField${Column.getFieldNameCamelCase()};
	#end
#end

	@Override
	public void onAttach(AttachEvent attachEvent) {
		super.onAttach(attachEvent);
		createButtons();
#foreach ($Reference in $GUIReferences)
	#set($ResourceId = "${Reference.getTableName()}DetailsLayout.field.${Reference.getResourceName()}.label")
		comboBox${Reference.getFieldNameCamelCase()} = createComboBox("$ResourceId", model.get${Reference.getFieldNameCamelCase()}(), ${Reference.getServiceAttributeName()}.findAll${Reference.getFindAllMethodNameExtension()}().toArray(new ${Reference.getReferencedModelClassName()}[0]));
		comboBox${Reference.getFieldNameCamelCase()}
				.setItemLabelGenerator(
						${Reference.getReferencedModelClassFieldName()}  -> comboBoxItemLabelGenerator != null
								? comboBoxItemLabelGenerator.getLabel(${ModelClassName}.${Reference.getFieldNameCamelCase().toUpperCase()}, ${Reference.getReferencedModelClassFieldName()})
								: "" + ${Reference.getReferencedModelClassFieldName()}.get${Reference.getReferencedModelNameFieldName()}());
		#if (${Reference.isNullable()} == true)
		comboBox${Reference.getFieldNameCamelCase()}.setClearButtonVisible(true);
		#end
#end
#foreach ($Column in ${GUIColumnDataCollection.getColumns()})
	#set($FieldName = "${Column.getFieldNameCamelCase()}")
	#set($ResourceId = "${Column.getFieldOwnerClassName()}DetailsLayout.field.${Column.getResourceName()}.label")
	#if (${Column.getType()} == "BOOLEAN")
		#if(${Column.isSimpleBoolean()} == "true")
			#set($GetterPrefix = "is")
		#else
			#set($GetterPrefix = "get")
		#end
		checkbox${FieldName} = createCheckbox("$ResourceId", model.${GetterPrefix}${FieldName}());
	#elseif (${Column.getType()} == "COMBOBOX")
	#elseif (${Column.getType()} == "ENUM")
		comboBox${FieldName} = createComboBox("$ResourceId", model.get${FieldName}(), ${Column.getFieldTypeName()}.values(), itemLabelGeneratorCollection.get${Column.FieldTypeName}ItemLabelGenerator());
		#if (${Column.isNullable()} == true)
		comboBox${FieldName}.setClearButtonVisible(true);
		#end
	#elseif (${Column.getType()} == "INTEGER")
		integerField${FieldName} = createIntegerField("$ResourceId", model.get${FieldName}(), ${Column.getMin()}, ${Column.getMax()}, ${Column.getStep()});
	#elseif (${Column.getType()} == "NUMERIC")
		numberField${FieldName} = createNumberField("$ResourceId", model.get${FieldName}(), ${Column.getMin()}, ${Column.getMax()}, ${Column.getStep()});
	#elseif (${Column.getType()} == "TEXT")
		textArea${FieldName} = createTextArea("$ResourceId", model.get${FieldName}());
	#elseif (${Column.getType()} == "TIMESTAMP")
		dateTimePicker${FieldName} = new DateTimePicker(resourceManager.getLocalizedString("$ResourceId", session.getLocalization()), model.get${FieldName}(), event -> {});
	#elseif (${Column.getType()} == "UPLOAD")
		MultiFileMemoryBuffer buffer${FieldName} = new MultiFileMemoryBuffer();
		upload${FieldName} = new Upload(buffer${FieldName});
		upload${FieldName}.setMaxFiles(1);
		upload${FieldName}.setMaxFileSize(Integer.MAX_VALUE);
		upload${FieldName}.addSucceededListener(event -> {
			System.out.println("upload (${FieldName}) started.");
			String fileName = event.getFileName();
			InputStream inputStream = buffer${FieldName}.getInputStream(fileName);
			System.out.println("upload complete!");
			try {
				model.set${FieldName}(inputStream.readAllBytes());
			} catch (IOException ioe) {
				System.out.println("while uploading file: " + fileName);
				ioe.printStackTrace();
			} finally {
				try {
					inputStream.close();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
		upload${FieldName}.setWidthFull();
	#else
		textField${FieldName} = createTextField("$ResourceId", model.get${FieldName}());
	#end
#end
		getStyle().set("-moz-border-radius", "4px");
		getStyle().set("-webkit-border-radius", "4px");
		getStyle().set("border-radius", "4px");
		getStyle().set("border", "1px solid #A9A9A9");
		getStyle()
				.set(
						"box-shadow",
						"10px 10px 20px #e4e4e4, -10px 10px 20px #e4e4e4, -10px -10px 20px #e4e4e4, 10px -10px 20px #e4e4e4");
		setMargin(false);
		setWidthFull();
		add(
#foreach ($Column in ${GUIColumnDataCollection.getColumns()})
	#if (${Column.getType()} == "BOOLEAN")
				checkbox${Column.getFieldNameCamelCase()},
	#elseif (${Column.getType()} == "COMBOBOX")
				comboBox${Column.getFieldNameCamelCase()},
	#elseif (${Column.getType()} == "ENUM")
				comboBox${Column.getFieldNameCamelCase()},
	#elseif (${Column.getType()} == "INTEGER")
				integerField${Column.getFieldNameCamelCase()},
	#elseif (${Column.getType()} == "NUMERIC")
				numberField${Column.getFieldNameCamelCase()},
	#elseif (${Column.getType()} == "TEXT")
				textArea${Column.getFieldNameCamelCase()},
	#elseif (${Column.getType()} == "TIMESTAMP")
				dateTimePicker${Column.getFieldNameCamelCase()},
	#elseif (${Column.getType()} == "UPLOAD")
				upload${Column.getFieldNameCamelCase()},
	#else
				textField${Column.getFieldNameCamelCase()},
	#end
#end
#foreach (${ListGridData} in ${ListGridDataCollection})
				new ${ListGridData.getListDetailsLayoutClassName()}(buttonFactory, guiConfiguration, model, resourceManager, session),
#end
				getMasterDataButtonLayout(model.getId() > 0));
#if (${PreferenceData})
	#foreach (${Preference} in ${PreferenceData})
		if (model.get${Preference.getIdColumnNameCamelCase()}() < 1) {
			session
		#if (${Preference.getType()} == "BOOLEAN")
					.findParameter(CHECK_BOX_${Preference.getPreferenceIdName()})
					.ifPresent(${Preference.getAttributeName()} -> {
							comboBox${Preference.getAttributeNameCamelCase()}.setValue((${Preference.getFieldTypeName()}) ${Preference.getAttributeName()});
		#elseif (${Preference.getType()} == "COMBOBOX")
					.findParameter(COMBO_BOX_${Preference.getPreferenceIdName()})
					.ifPresentOrElse(${Preference.getAttributeName()} -> {
							comboBox${Preference.getAttributeNameCamelCase()}.setValue((${Preference.getFieldTypeName()}) ${Preference.getAttributeName()});
		#elseif (${Preference.getType()} == "ENUM")
					.findParameter(COMBO_BOX_${Preference.getPreferenceIdName()})
					.ifPresentOrElse(${Preference.getAttributeName()} -> {
							comboBox${Preference.getAttributeNameCamelCase()}.setValue((${Preference.getFieldTypeName()}) ${Preference.getAttributeName()});
		#elseif (${Preference.getType()} == "INTEGER")
					.findParameter(INTEGER_FIELD_${Preference.getPreferenceIdName()})
					.ifPresentOrElse(${Preference.getAttributeName()} -> {
							comboBox${Preference.getAttributeNameCamelCase()}.setValue((${Preference.getFieldTypeName()}) ${Preference.getAttributeName()});
		#elseif (${Preference.getType()} == "NUMERIC")
					.findParameter(NUMERIC_FIELD_${Preference.getPreferenceIdName()})
					.ifPresentOrElse(${Preference.getAttributeName()} -> {
							comboBox${Preference.getAttributeNameCamelCase()}.setValue((${Preference.getFieldTypeName()}) ${Preference.getAttributeName()});
		#elseif (${Preference.getType()} == "TEXT")
					.findParameter(TEXT_FIELD_${Preference.getPreferenceIdName()})
					.ifPresentOrElse(${Preference.getAttributeName()} -> {
							comboBox${Preference.getAttributeNameCamelCase()}.setValue((${Preference.getFieldTypeName()}) ${Preference.getAttributeName()});
		#elseif (${Preference.getType()} == "TIMESTAMP")
					.findParameter(TIMESTAMP_FIELD_${Preference.getPreferenceIdName()})
					.ifPresentOrElse(${Preference.getAttributeName()} -> {
							comboBox${Preference.getAttributeNameCamelCase()}.setValue((${Preference.getFieldTypeName()}) ${Preference.getAttributeName()});
		#else
					.findParameter(TEXT_FIELD_${Preference.getPreferenceIdName()})
					.ifPresentOrElse(${Preference.getAttributeName()} -> {
							textField${Preference.getAttributeNameCamelCase()}.setValue((${Preference.getFieldTypeName()}) ${Preference.getAttributeName()});
		#end
							#if (${Preference.getNextFieldType()} == "BOOLEAN")
							checkbox${Preference.getNextFieldNameCamelCase()}.focus();
							#elseif (${Preference.getNextFieldType()} == "COMBOBOX")
							comboBox${Preference.getNextFieldNameCamelCase()}.focus();
							#elseif (${Preference.getNextFieldType()} == "ENUM")
							comboBox${Preference.getNextFieldNameCamelCase()}.focus();
							#elseif (${Preference.getNextFieldType()} == "INTEGER")
							integerField${Preference.getNextFieldNameCamelCase()}.focus();
							#elseif (${Preference.getNextFieldType()} == "NUMERIC")
							numberField${Preference.getNextFieldNameCamelCase()}.focus();
							#elseif (${Preference.getNextFieldType()} == "TEXT")
							textArea${Preference.getNextFieldNameCamelCase()}.focus();
							#elseif (${Preference.getNextFieldType()} == "TIMESTAMP")
							dateTimePicker${Preference.getNextFieldNameCamelCase()}.focus();
							#else
							textField${Preference.getNextFieldNameCamelCase()}.focus();
							#end
					}, () -> #if (${Preference.getFirstFieldType()} == "BOOLEAN")
checkbox${Preference.getFirstFieldNameCamelCase()}.focus());#elseif (${Preference.getFirstFieldType()} == "COMBOBOX")
comboBox${Preference.getFirstFieldNameCamelCase()}.focus());#elseif (${Preference.getFirstFieldType()} == "ENUM")
comboBox${Preference.getFirstFieldNameCamelCase()}.focus());#elseif (${Preference.getFirstFieldType()} == "INTEGER")
integerField${Preference.getFirstFieldNameCamelCase()}.focus());#elseif (${Preference.getFirstFieldType()} == "NUMERIC")
numberField${Preference.getFirstFieldNameCamelCase()}.focus());#elseif (${Preference.getFirstFieldType()} == "TEXT")
textArea${Preference.getFirstFieldNameCamelCase()}.focus());#elseif (${Preference.getFirstFieldType()} == "TIMESTAMP")
dateTimePicker${Preference.getFirstFieldNameCamelCase()}.focus());#else
textField${Preference.getFirstFieldNameCamelCase()}.focus());#end
#if (${Preference.getFirstFieldType()})
		} else {
			#if (${Preference.getFirstFieldType()} == "BOOLEAN")
			checkbox${Preference.getFirstFieldNameCamelCase()}.focus();
			#elseif (${Preference.getFirstFieldType()} == "COMBOBOX")
			comboBox${Preference.getFirstFieldNameCamelCase()}.focus();
			#elseif (${Preference.getFirstFieldType()} == "ENUM")
			comboBox${Preference.getFirstFieldNameCamelCase()}.focus();
			#elseif (${Preference.getFirstFieldType()} == "INTEGER")
			integerField${Preference.getFirstFieldNameCamelCase()}.focus();
			#elseif (${Preference.getFirstFieldType()} == "NUMERIC")
			numberField${Preference.getFirstFieldNameCamelCase()}.focus();
			#elseif (${Preference.getFirstFieldType()} == "TEXT")
			textArea${Preference.getFirstFieldNameCamelCase()}.focus();
			#elseif (${Preference.getFirstFieldType()} == "TIMESTAMP")
			dateTimePicker${Preference.getFirstFieldNameCamelCase()}.focus();
			#else
			textField${Preference.getFirstFieldNameCamelCase()}.focus();
			#end
		#end
		}
	#end
#else
	#set ($FirstColumn = ${GUIColumnDataCollection.getColumns().get(0)})
	#if (${FirstColumn.getType()} == "BOOLEAN")
		checkbox${FirstColumn.getFieldNameCamelCase()}.focus();
	#elseif (${FirstColumn.getType()} == "COMBOBOX")
		comboBox${FirstColumn.getFieldNameCamelCase()}.focus();
	#elseif (${FirstColumn.getType()} == "ENUM")
		comboBox${FirstColumn.getFieldNameCamelCase()}.focus();
	#elseif (${FirstColumn.getType()} == "INTEGER")
		integerField${FirstColumn.getFieldNameCamelCase()}.focus();
	#elseif (${FirstColumn.getType()} == "NUMERIC")
		numberField${FirstColumn.getFieldNameCamelCase()}.focus();
	#elseif (${FirstColumn.getType()} == "TEXT")
		textArea${FirstColumn.getFieldNameCamelCase()}.focus();
	#elseif (${FirstColumn.getType()} == "TIMESTAMP")
		dateTimePicker${FirstColumn.getFieldNameCamelCase()}.focus();
	#else
		textField${FirstColumn.getFieldNameCamelCase()}.focus();
	#end
#end
	}

	@Override
	protected ${ButtonFactoryClassName} getButtonFactory() {
		return buttonFactory;
	}

	@Override
	protected ${ResourceManagerInterfaceName} getResourceManager() {
		return resourceManager;
	}

	@Override
	protected ${SessionDataClassName} getSessionData() {
		return session;
	}

	@Override
	protected void remove() {
		service.delete(model);
		observer.remove();
	}

	@Override
	protected void save() {
#foreach (${Preference} in ${PreferenceData})
	#if (${Preference.getType()} == "BOOLEAN")
		session.setParameter(CHECK_BOX_${Preference.getPreferenceIdName()}, checkBox${Preference.getAttributeNameCamelCase()}.getValue());
	#elseif (${Preference.getType()} == "COMBOBOX")
		session.setParameter(COMBO_BOX_${Preference.getPreferenceIdName()}, comboBox${Preference.getAttributeNameCamelCase()}.getValue());
	#elseif (${Preference.getType()} == "ENUM")
		session.setParameter(COMBO_BOX_${Preference.getPreferenceIdName()}, comboBox${Preference.getAttributeNameCamelCase()}.getValue());
	#elseif (${Preference.getType()} == "INTEGER")
		session.setParameter(INTEGER_FIELD_${Preference.getPreferenceIdName()}, integerField${Preference.getAttributeNameCamelCase()}.getValue());
	#elseif (${Preference.getType()} == "NUMERIC")
		session.setParameter(NUMBER_FIELD_${Preference.getPreferenceIdName()}, numberField${Preference.getAttributeNameCamelCase()}.getValue());
	#elseif (${Preference.getType()} == "TEXT")
		session.setParameter(TEXT_AREA_${Preference.getPreferenceIdName()}, textArea${Preference.getAttributeNameCamelCase()}.getValue());
	#elseif (${Preference.getType()} == "TIMESTAMP")
		session.setParameter(TIMESTAMP_FIELD_${Preference.getPreferenceIdName()}, textArea${Preference.getAttributeNameCamelCase()}.getValue());
	#else
		session.setParameter(TEXT_FIELD_${Preference.getPreferenceIdName()}, textField${Preference.getAttributeNameCamelCase()}.getValue());
	#end
#end
#foreach ($Column in ${GUIColumnDataCollection.getColumns()})
	#if (${Column.getType()} == "BOOLEAN")
		model.set${Column.getFieldNameCamelCase()}(checkbox${Column.getFieldNameCamelCase()}.getValue());
	#elseif (${Column.getType()} == "COMBOBOX")
		model.set${Column.getFieldNameCamelCase()}(comboBox${Column.getFieldNameCamelCase()}.getValue());
	#elseif (${Column.getType()} == "ENUM")
		model.set${Column.getFieldNameCamelCase()}(comboBox${Column.getFieldNameCamelCase()}.getValue());
	#elseif (${Column.getType()} == "INTEGER")
		model.set${Column.getFieldNameCamelCase()}(integerField${Column.getFieldNameCamelCase()}.getValue());
	#elseif (${Column.getType()} == "NUMERIC")
		model.set${Column.getFieldNameCamelCase()}(numberField${Column.getFieldNameCamelCase()}.getValue());
	#elseif (${Column.getType()} == "TEXT")
		model.set${Column.getFieldNameCamelCase()}(textArea${Column.getFieldNameCamelCase()}.getValue());
	#elseif (${Column.getType()} == "TIMESTAMP")
		model.set${Column.getFieldNameCamelCase()}(dateTimePicker${Column.getFieldNameCamelCase()}.getValue());
	#elseif (${Column.getType()} == "STRING")
		model.set${Column.getFieldNameCamelCase()}(textField${Column.getFieldNameCamelCase()}.getValue());
	#elseif (${Column.getType()} != "UPLOAD")
		// UNKNOWN ${Column.getFieldNameCamelCase()}
	#end
#end
		observer.save(service.update(model));
	}

}