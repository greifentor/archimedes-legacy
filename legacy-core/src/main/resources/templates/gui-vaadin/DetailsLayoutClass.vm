package ${PackageName};

import com.vaadin.flow.component.AttachEvent;
#if ($GUIReferences && $GUIReferences.size() > 0)
import com.vaadin.flow.component.combobox.ComboBox;
#end
#if (${GUIColumnDataCollection.hasFieldType("BOOLEAN")} == true)
import com.vaadin.flow.component.checkbox.Checkbox;
#end
#if (${GUIColumnDataCollection.hasFieldType("ENUM")} == true)
import com.vaadin.flow.component.combobox.ComboBox;
#end
#if (${GUIColumnDataCollection.hasFieldType("INTEGER")} == true)
import com.vaadin.flow.component.textfield.IntegerField;
#end
#if (${GUIColumnDataCollection.hasFieldType("NUMERIC")} == true)
import com.vaadin.flow.component.textfield.NumberField;
#end
#if (${GUIColumnDataCollection.hasFieldType("TEXT")} == true)
import com.vaadin.flow.component.textfield.TextArea;
#end
#if (${GUIColumnDataCollection.hasFieldType("STRING")} == true)
import com.vaadin.flow.component.textfield.TextField;
#end

#foreach ($ImportDeclaration in $ImportDeclarations.toList())
import ${ImportDeclaration.getSingleImportDeclaration()};
#end
import lombok.Generated;
import lombok.RequiredArgsConstructor;

/**
 * ${Generated}
 */
@Generated
@RequiredArgsConstructor
public class ${ClassName} extends ${AbstractMasterDataBaseLayoutClassName} {

#foreach (${Preference} in ${PreferenceData})
	#if (${Preference.getType()} == "BOOLEAN")
	#elseif (${Preference.getType()} == "COMBOBOX")
	private static final String COMBO_BOX_${Preference.getPreferenceIdName()} = "${ClassName}.comboBox${Preference.getAttributeNameCamelCase()}.preference";
	#elseif (${Preference.getType()} == "ENUM")
	#elseif (${Preference.getType()} == "INTEGER")
	#elseif (${Preference.getType()} == "NUMERIC")
	#elseif (${Preference.getType()} == "TEXT")
	#else
	#end

#end
	private final ${ButtonFactoryClassName} buttonFactory;
	private final ${ModelClassName} model;
	private final ${ServiceInterfaceName} service;
#foreach ($FieldDeclaration in $FieldDeclarations.toList())
	private final ${FieldDeclaration.getTypeName()} ${FieldDeclaration.getAttributeName()};
#end
	private final ${ResourceManagerInterfaceName} resourceManager;
	private final ${SessionDataClassName} session;
	private final Observer observer;
	private final DetailsLayoutComboBoxItemLabelGenerator<#if(${ModelSuperClassName})${ModelSuperClassName}#else${ModelClassName}#end> comboBoxItemLabelGenerator;

#foreach ($Reference in $GUIReferences)
	private ComboBox<${Reference.getReferencedModelClassName()}> comboBox${Reference.getFieldNameCamelCase()};
#end
#foreach ($Column in ${GUIColumnDataCollection.getColumns()})
	#if (${Column.getType()} == "BOOLEAN")
	private Checkbox checkbox${Column.getFieldNameCamelCase()};
	#elseif (${Column.getType()} == "COMBOBOX")
	#elseif (${Column.getType()} == "ENUM")
	private ComboBox<${Column.getFieldTypeName()}> comboBox${Column.getFieldNameCamelCase()};
	#elseif (${Column.getType()} == "INTEGER")
	private IntegerField integerField${Column.getFieldNameCamelCase()};
	#elseif (${Column.getType()} == "NUMERIC")
	private NumberField numberField${Column.getFieldNameCamelCase()};
	#elseif (${Column.getType()} == "TEXT")
	private TextArea textArea${Column.getFieldNameCamelCase()};
	#else
	private TextField textField${Column.getFieldNameCamelCase()};
	#end
#end

	@Override
	public void onAttach(AttachEvent attachEvent) {
		super.onAttach(attachEvent);
		createButtons();
#foreach ($Reference in $GUIReferences)
	#set($ResourceId = "${Reference.getTableName()}DetailsLayout.field.${Reference.getResourceName()}.label")
		comboBox${Reference.getFieldNameCamelCase()} = createComboBox("$ResourceId", model.get${Reference.getFieldNameCamelCase()}(), ${Reference.getServiceAttributeName()}.findAll${Reference.getFindAllMethodNameExtension()}().toArray(new ${Reference.getReferencedModelClassName()}[0]));
		comboBox${Reference.getFieldNameCamelCase()}
				.setItemLabelGenerator(
						${Reference.getReferencedModelClassFieldName()}  -> comboBoxItemLabelGenerator != null
								? comboBoxItemLabelGenerator.getLabel(${ModelClassName}.${Reference.getFieldNameCamelCase().toUpperCase()}, ${Reference.getReferencedModelClassFieldName()})
								: "" + ${Reference.getReferencedModelClassFieldName()}.get${Reference.getReferencedModelNameFieldName()}());
#end
#foreach ($Column in ${GUIColumnDataCollection.getColumns()})
	#set($FieldName = "${Column.getFieldNameCamelCase()}")
	#set($ResourceId = "${Column.getFieldOwnerClassName()}DetailsLayout.field.${Column.getResourceName()}.label")
	#if (${Column.getType()} == "BOOLEAN")
		#if(${Column.isSimpleBoolean()} == "true")
			#set($GetterPrefix = "is")
		#else
			#set($GetterPrefix = "get")
		#end
		checkbox${FieldName} = createCheckbox("$ResourceId", model.${GetterPrefix}${FieldName}());
	#elseif (${Column.getType()} == "COMBOBOX")
	#elseif (${Column.getType()} == "ENUM")
		comboBox${FieldName} = createComboBox("$ResourceId", model.get${FieldName}(), ${Column.getFieldTypeName()}.values());
	#elseif (${Column.getType()} == "INTEGER")
		integerField${FieldName} = createIntegerField("$ResourceId", model.get${FieldName}(), ${Column.getMin()}, ${Column.getMax()}, ${Column.getStep()});
	#elseif (${Column.getType()} == "NUMERIC")
		numberField${FieldName} = createNumberField("$ResourceId", model.get${FieldName}(), ${Column.getMin()}, ${Column.getMax()}, ${Column.getStep()});
	#elseif (${Column.getType()} == "TEXT")
		textArea${FieldName} = createTextArea("$ResourceId", model.get${FieldName}());
	#else
		textField${FieldName} = createTextField("$ResourceId", model.get${FieldName}());
	#end
#end
		getStyle().set("-moz-border-radius", "4px");
		getStyle().set("-webkit-border-radius", "4px");
		getStyle().set("border-radius", "4px");
		getStyle().set("border", "1px solid #A9A9A9");
		getStyle()
				.set(
						"box-shadow",
						"10px 10px 20px #e4e4e4, -10px 10px 20px #e4e4e4, -10px -10px 20px #e4e4e4, 10px -10px 20px #e4e4e4");
		setMargin(false);
		setWidthFull();
		add(
#foreach ($Column in ${GUIColumnDataCollection.getColumns()})
	#if (${Column.getType()} == "BOOLEAN")
				checkbox${Column.getFieldNameCamelCase()},
	#elseif (${Column.getType()} == "COMBOBOX")
				comboBox${Column.getFieldNameCamelCase()},
	#elseif (${Column.getType()} == "ENUM")
				comboBox${Column.getFieldNameCamelCase()},
	#elseif (${Column.getType()} == "INTEGER")
				integerField${Column.getFieldNameCamelCase()},
	#elseif (${Column.getType()} == "NUMERIC")
				numberField${Column.getFieldNameCamelCase()},
	#elseif (${Column.getType()} == "TEXT")
				textArea${Column.getFieldNameCamelCase()},
	#else
				textField${Column.getFieldNameCamelCase()},
	#end
#end
				getMasterDataButtonLayout(model.getId() > 0));
#if (${PreferenceData})
	#foreach (${Preference} in ${PreferenceData})
		if (model.get${Preference.getIdColumnNameCamelCase()}() < 1) {
			session
		#if (${Preference.getType()} == "BOOLEAN")
		#elseif (${Preference.getType()} == "COMBOBOX")
					.findParameter(COMBO_BOX_${Preference.getPreferenceIdName()})
					.ifPresent(${Preference.getAttributeName()} -> comboBox${Preference.getAttributeNameCamelCase()}.setValue((${Preference.getFieldTypeName()}) ${Preference.getAttributeName()}));
		#elseif (${Preference.getType()} == "ENUM")
		#elseif (${Preference.getType()} == "INTEGER")
		#elseif (${Preference.getType()} == "NUMERIC")
		#elseif (${Preference.getType()} == "TEXT")
		#else
		#end
		#if (${Preference.getNextFieldType()})
		} else {
			#if (${Preference.getNextFieldType()} == "BOOLEAN")
			checkbox${Preference.getNextFieldNameCamelCase()}.focus();
			#elseif (${Preference.getNextFieldType()} == "COMBOBOX")
			comboBox${Preference.getNextFieldNameCamelCase()}.focus();
			#elseif (${Preference.getNextFieldType()} == "ENUM")
			comboBox${Preference.getNextFieldNameCamelCase()}.focus();
			#elseif (${Preference.getNextFieldType()} == "INTEGER")
			integerField${Preference.getNextFieldNameCamelCase()}.focus();
			#elseif (${Preference.getNextFieldType()} == "NUMERIC")
			numberField${Preference.getNextFieldNameCamelCase()}.focus();
			#elseif (${Preference.getNextFieldType()} == "TEXT")
			textArea${Preference.getNextFieldNameCamelCase()}.focus();
			#else
			textField${Preference.getNextFieldNameCamelCase()}.focus();
			#end
		#end
		}
	#end
#else
	#set ($FirstColumn = ${GUIColumnDataCollection.getColumns().get(0)})
	#if (${FirstColumn.getType()} == "BOOLEAN")
		checkbox${FirstColumn.getFieldNameCamelCase()}.focus();
	#elseif (${FirstColumn.getType()} == "COMBOBOX")
		comboBox${FirstColumn.getFieldNameCamelCase()}.focus();
	#elseif (${FirstColumn.getType()} == "ENUM")
		comboBox${FirstColumn.getFieldNameCamelCase()}.focus();
	#elseif (${FirstColumn.getType()} == "INTEGER")
		integerField${FirstColumn.getFieldNameCamelCase()}.focus();
	#elseif (${FirstColumn.getType()} == "NUMERIC")
		numberField${FirstColumn.getFieldNameCamelCase()}.focus();
	#elseif (${FirstColumn.getType()} == "TEXT")
		textArea${FirstColumn.getFieldNameCamelCase()}.focus();
	#else
		textField${FirstColumn.getFieldNameCamelCase()}.focus();
	#end
#end
	}

	@Override
	protected ${ButtonFactoryClassName} getButtonFactory() {
		return buttonFactory;
	}

	@Override
	protected ${ResourceManagerInterfaceName} getResourceManager() {
		return resourceManager;
	}

	@Override
	protected ${SessionDataClassName} getSessionData() {
		return session;
	}

	@Override
	protected void remove() {
		service.delete(model);
		observer.remove();
	}

	@Override
	protected void save() {
#foreach (${Preference} in ${PreferenceData})
		session.setParameter(COMBO_BOX_${Preference.getPreferenceIdName()}, comboBox${Preference.getAttributeNameCamelCase()}.getValue());
#end
#foreach ($Column in ${GUIColumnDataCollection.getColumns()})
	#if (${Column.getType()} == "BOOLEAN")
		model.set${Column.getFieldNameCamelCase()}(checkbox${Column.getFieldNameCamelCase()}.getValue());
	#elseif (${Column.getType()} == "COMBOBOX")
		model.set${Column.getFieldNameCamelCase()}(comboBox${Column.getFieldNameCamelCase()}.getValue());
	#elseif (${Column.getType()} == "ENUM")
		model.set${Column.getFieldNameCamelCase()}(comboBox${Column.getFieldNameCamelCase()}.getValue());
	#elseif (${Column.getType()} == "INTEGER")
		model.set${Column.getFieldNameCamelCase()}(integerField${Column.getFieldNameCamelCase()}.getValue());
	#elseif (${Column.getType()} == "NUMERIC")
		model.set${Column.getFieldNameCamelCase()}(numberField${Column.getFieldNameCamelCase()}.getValue());
	#elseif (${Column.getType()} == "TEXT")
		model.set${Column.getFieldNameCamelCase()}(textArea${Column.getFieldNameCamelCase()}.getValue());
	#else
		model.set${Column.getFieldNameCamelCase()}(textField${Column.getFieldNameCamelCase()}.getValue());
	#end
#end
		observer.save(service.update(model));
	}

}