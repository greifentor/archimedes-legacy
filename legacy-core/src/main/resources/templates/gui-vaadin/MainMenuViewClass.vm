package ${PackageName};

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.router.BeforeEnterEvent;
import com.vaadin.flow.router.BeforeEnterObserver;
import com.vaadin.flow.router.BeforeEvent;
import com.vaadin.flow.router.HasUrlParameter;
import com.vaadin.flow.router.OptionalParameter;
import com.vaadin.flow.router.Route;

import ${ResourceManagerPackageName}.${ResourceManagerInterfaceName};
import ${SessionDataPackageName}.${SessionDataClassName};
import ${ButtonPackageName}.${ButtonClassName};
import ${ButtonFactoryPackageName}.${ButtonFactoryClassName};
import ${ButtonGridPackageName}.${ButtonGridClassName};
import ${HeaderLayoutPackageName}.${HeaderLayoutClassName};
import ${HeaderLayoutPackageName}.${HeaderLayoutClassName}.HeaderLayoutMode;
import ${GUIConfigurationPackageName}.${GUIConfigurationClassName};
import ${UserAuthorizationCheckerPackageName}.${UserAuthorizationCheckerClassName};
import ${MasterDataViewPackageName}.${MasterDataViewClassName};

import lombok.Generated;
import lombok.RequiredArgsConstructor;

#if (!$CommentsOff)
/**
 * A main menu view for the application.
 *
 * ${Generated}
 */
#end
@Generated
@Route(${ClassName}.URL)
@RequiredArgsConstructor
public class ${ClassName} extends VerticalLayout implements BeforeEnterObserver, HasUrlParameter<String> {

	public static final String URL = "${BaseURL}/menu";

	private static final Logger LOG = LogManager.getLogger(MainMenuView.class);

	private final ${ButtonFactoryClassName} buttonFactory;
	private final ${GUIConfigurationClassName} guiConfiguration;
	private final ${ResourceManagerInterfaceName} resourceManager;
	private final ${SessionDataClassName} session;

	@Override
	public void setParameter(BeforeEvent event, @OptionalParameter String parameter) {
		logger.debug("setParameter");
	}

	@Override
	public void beforeEnter(BeforeEnterEvent beforeEnterEvent) {
		UserAuthorizationChecker.forwardToLoginOnNoUserSetForSession(session, beforeEnterEvent);
		logger.info("created");
		setMargin(false);
		setWidthFull();
		getStyle().set("background-image", "url('" + guiConfiguration.getMainMenuBackgroundFileName() + "')");
		getStyle().set("background-size", "cover");
		${ButtonClassName} buttonMasterData =
				buttonFactory
						.createButton(
								resourceManager
										.getLocalizedString(
												"main-menu.button.master-data.text",
												session.getLocalization()));
		buttonMasterData.addClickListener(event -> switchToMasterData());
		buttonMasterData.setWidthFull();
		${ButtonGirdClassName} buttonGridMasterData = new ButtonGrid(4, buttonMasterData);
		buttonGridMasterData.setMargin(false);
		buttonGridMasterData.setWidthFull();
		add(
				new ${HeaderLayoutClassName}(
						buttonFactory.createLogoutButton(resourceManager, this::getUI, session, logger),
						resourceManager.getLocalizedString("commons.header.main-menu.label", session.getLocalization()),
						HeaderLayoutMode.PLAIN),
				buttonGridMasterData);
		logger.info("main menu view opened for user '{}'.", session.getUserName());
	}

	private void switchToMasterData() {
		getUI().ifPresent(ui -> ui.navigate(${MasterDataViewClassName}.URL));
	}

}