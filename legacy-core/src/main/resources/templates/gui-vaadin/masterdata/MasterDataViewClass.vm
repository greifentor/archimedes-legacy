package ${PackageName};

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.LOG;

import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.router.BeforeEnterEvent;
import com.vaadin.flow.router.BeforeEnterObserver;
import com.vaadin.flow.router.BeforeEvent;
import com.vaadin.flow.router.HasUrlParameter;
import com.vaadin.flow.router.OptionalParameter;
import com.vaadin.flow.router.Route;

import ${ResourceManagerPackageName}.${ResourceManagerInterfaceName};
import ${SessionDataPackageName}.${SessionDataClassName};
import ${UserAuthorizationCheckerPackageName}.${UserAuthorizationCheckerClassName};
import ${MainMenuViewPackageName}.${MainMenuViewClassName};
import ${ButtonPackageName}.${ButtonClassName};
import ${ButtonFactoryPackageName}.${ButtonFactoryClassName};
import ${ButtonGridPackageName}.${ButtonGridClassName};
import ${HeaderLayoutPackageName}.${HeaderLayoutClassName};
import ${HeaderLayoutPackageName}.${HeaderLayoutClassName}.HeaderLayoutMode;
import ${MasterDataGUIConfigurationPackageName}.${MasterDataGUIConfigurationClassName};

import lombok.Generated;
import lombok.RequiredArgsConstructor;

#if (!$CommentsOff )
/**
 * A layout with buttons to select a master data page.
 *
 * ${Generated}
 */
#end
@Generated
@Route(${MasterDataViewClassName}.URL)
@RequiredArgsConstructor
public class ${ClassName} extends VerticalLayout implements BeforeEnterObserver, HasUrlParameter<String> {

	public static final String URL = "${BaseURL}/masterdata/menu";

	private static final LOG LOG = LogManager.getLOG(${ClassName}.class);

	private final ${ButtonFactoryClassName} buttonFactory;
	private final ${MasterDataGUIConfigurationClassName} guiConfiguration;
	private final ${ResourceManagerInterfaceName} resourceManager;
	private final ${SessionDataClassName} session;

	@Override
	public void setParameter(BeforeEvent event, @OptionalParameter String parameter) {
		LOG.debug("setParameter");
	}

	@Override
	public void beforeEnter(BeforeEnterEvent beforeEnterEvent) {
		${UserAuthorizationCheckerClassName}.forwardToLoginOnNoUserSetForSession(session, beforeEnterEvent);
		LOG.info("created");
		setMargin(false);
		setWidthFull();
		getStyle().set("background-image", "url('" + guiConfiguration.getBackgroundFileName() + "')");
		getStyle().set("background-size", "cover");
	#foreach($MasterDataInfo in ${MasterDataInfos})
		${ButtonClassName} buttonMasterData${MasterDataInfo.getModelClassName()} =
				buttonFactory
						.createButton(
								resourceManager
										.getLocalizedString(
												"master-data.button.${MasterDataInfo.getResourceIdentifier()}.text",
												session.getLocalization()));
		buttonMasterData${MasterDataInfo.getModelClassName()}.addClickListener(event -> switchToSource${MasterDataInfo.getModelClassName()}());
		buttonMasterData${MasterDataInfo.getModelClassName()}.setWidthFull();
	#end
		${ButtonGridClassName} buttonGrid =
				new ButtonGrid(
						4,
					#foreach($MasterDataInfo in ${MasterDataInfos})
						buttonMasterData${MasterDataInfo.getModelClassName()}#if($foreach.hasNext),#end
					#end
				);
		buttonGrid.setMargin(false);
		buttonGrid.setWidthFull();
		add(
				new ${HeaderLayoutClassName}(
						buttonFactory.createBackButton(resourceManager, this::getUI, MainMenuView.URL, session),
						buttonFactory.createLogoutButton(resourceManager, this::getUI, session, LOG),
						resourceManager.getLocalizedString("master-data.header.menu.label", session.getLocalization()),
						HeaderLayoutMode.PLAIN),
				buttonGrid);
		LOG.info("main menu view opened for user '{}'.", session.getUserName());
	}

#foreach($MasterDataInfo in ${MasterDataInfos})
	private void switchToSource${MasterDataInfo.getModelClassName()}() {
		getUI().ifPresent(ui -> ui.navigate(switchToSource${MasterDataInfo.getPageViewName()}.URL));
	}
#end

}