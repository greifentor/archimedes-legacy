package ${PackageName};

import java.util.NoSuchElementException;

import ${JavaxPackageName}.inject.Inject;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import ${DTOConverterClassNameQualified};
import ${DTOClassNameQualified};
import ${ListDTOClassNameQualified};
#if ($GenerateIdClass)
import ${IdModelClassNameQualified};
#end
import ${ServiceInterfaceNameQualified};

#if (!$CommentsOff )
/**
 * A REST controller for ${SimpleName}s.
 *
 * GENERATED CODE !!! DO NOT CHANGE !!!
 */
#end
@RestController
@RequestMapping(${ClassName}.BASE_URL)
public class ${ClassName} {

	public static final String BASE_URL = "${URL}";

	@Inject
	private ${ServiceInterfaceName} service;
	@Inject
	private ${DTOConverterClassName} converter;

	@GetMapping
	public ${ListDTOClassName} findAll() {
		return new ${ListDTOClassName}().setContent(converter.convert(service.findAll()));
	}

	@GetMapping("/{id}")
	public ${DTOClassName} findById(@PathVariable(name = "id", required = true) String id) {
		return converter
				.convert(
						service
								.findById(${IdCall})
								.orElseThrow(() -> new NoSuchElementException("${SimpleName} not found with id:" + id)));
	}

}