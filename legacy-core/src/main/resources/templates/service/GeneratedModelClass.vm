package ${PackageName};

#if ($ImportLocalDate || $ImportLocalDateTime)
#if ($ImportLocalDate)
import ${ImportLocalDate};
#end
#if ($ImportLocalDateTime)
import ${ImportLocalDateTime};
#end

#end
#if ($POJOMode == "BUILDER")
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.NoArgsConstructor;
#end
import lombok.Data;
#if ($Subclass)
import lombok.EqualsAndHashCode;
#end
import lombok.Generated;
#if ($Subclass)
import lombok.ToString;
#end
#if ($POJOMode == "CHAIN")
import lombok.experimental.Accessors;
#end

#if (!$CommentsOff )
/**
 * A model for ${PluralName}.
 *
 * ${Generated}
 */
#end
#if ($POJOMode == "CHAIN")
@Accessors(chain = true)
#elseif ($POJOMode == "BUILDER")
@Builder
@AllArgsConstructor
@NoArgsConstructor
#end
@Data
#if ($Subclass)
@EqualsAndHashCode(callSuper = true)
#end
@Generated
#if ($Subclass)
@ToString(callSuper = true)
#end
public class ${ClassName} #if($Subclass)extends ${SuperclassName} #end{

#foreach($Column in $ColumnData)
#if(!${Subclass} or !${Column.isPkMember()})
	public static final String ${Column.getFieldName().toUpperCase()} = "${Column.getFieldName().toUpperCase()}";
#end
#end

#foreach($Column in $ColumnData)
#if(!${Subclass} or !${Column.isPkMember()})
	private ${Column.getFieldType()} ${Column.getFieldName()}#if (${Column.getInitWith()}) = ${Column.getInitWith()}#end;
#end
#end

}